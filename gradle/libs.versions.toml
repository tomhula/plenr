[versions]
kotlin = "2.1.0"
kotlinx-serialization = "1.8.0"
kotlinx-coroutines = "1.10.1"
kotlinx-datetime = "0.6.1"
ktor = "3.0.3"
logback = "1.5.16"
clikt = "5.0.2"
compose = "1.8.0-alpha02"
kilua = "0.0.19"
mysql = "9.2.0"
exposed = "0.60.0"
commons-email = "2.0.0-M1"
kotlinx-rpc = "0.5.1"

[libraries]
# Kotlin
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
# Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
# UI
kilua = { module = "dev.kilua:kilua", version.ref = "kilua" }
kilua-routing = { module = "dev.kilua:kilua-routing", version.ref = "kilua" }
kilua-jetpack = { module = "dev.kilua:kilua-jetpack", version.ref = "kilua" }
kilua-imask = { module = "dev.kilua:kilua-imask", version.ref = "kilua" }
kilua-bootstrap = { module = "dev.kilua:kilua-bootstrap", version.ref = "kilua" }
kilua-toastify = { module = "dev.kilua:kilua-toastify", version.ref = "kilua" }
kilua-tempus-dominus = { module = "dev.kilua:kilua-tempus-dominus", version.ref = "kilua" }
kilua-rsup-progress = { module = "dev.kilua:kilua-rsup-progress", version.ref = "kilua" }
kilua-fontawesome = { module = "dev.kilua:kilua-fontawesome", version.ref = "kilua" }
# Logging
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
# CLI
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
# Ktor
ktor-server-core = { module = "io.ktor:ktor-server-core" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
# RPC
kotlinx-rpc-core = { module = "org.jetbrains.kotlinx:kotlinx-rpc-core", version.ref = "kotlinx-rpc" }
kotlinx-rpc-krpc-client = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-client", version.ref = "kotlinx-rpc" }
kotlinx-rpc-krpc-server = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-server", version.ref = "kotlinx-rpc" }
kotlinx-rpc-krpc-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-serialization-json", version.ref = "kotlinx-rpc" }
kotlinx-rpc-krpc-ktor-client = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-ktor-client", version.ref = "kotlinx-rpc" }
kotlinx-rpc-krpc-ktor-server = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-ktor-server", version.ref = "kotlinx-rpc" }
# SQL
mysql-connector-j = { module = "com.mysql:mysql-connector-j", version.ref = "mysql" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
# Mail
commons-email2-jakarta = { module = "org.apache.commons:commons-email2-jakarta", version.ref = "commons-email" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kilua = { id = "dev.kilua", version.ref = "kilua" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinx-rpc-plugin = { id = "org.jetbrains.kotlinx.rpc.plugin", version.ref = "kotlinx-rpc" }
